[0   = 0  ] 00030       10  VAR_VGA_moveToX: xor $0, $0     # where to move the duck to 
[1   = 1  ] 00030       11  VAR_VGA_moveToY: xor $0, $0     # where to move the duck to 
[2   = 2  ] 00030       12  VAR_VGA_currentX: xor $0, $0    # current duck X pos
[3   = 3  ] 00030       13  VAR_VGA_currentY: xor $0, $0    # current duck Y pos
[4   = 4  ] 00030       14  VAR_moveDuckReturn: xor $0, $0  
[5   = 5  ] 0def0       16  posOne: movi 240, $14_y # y = 240
[6   = 6  ] 0fd01       18    lui 0x01, $13
[7   = 7  ] 0d240       19    movi 0x40, $2
[8   = 8  ] 00d22       20    or $2, $13_x
Label: posTwo = 12
[9   = 9  ] 0dc0c       22    movi posTwo, $12
Label: moveDuck = 17
[a   = 10 ] 0df11       24    movi moveDuck, $15
[b   = 11 ] 04fce       25    juc $15
[c   = 12 ] 0de0a       27  posTwo: movi 10, $14 
[d   = 13 ] 0dd0a       28    movi 10, $13
Label: posOne = 5
[e   = 14 ] 0dc05       29    movi posOne, $12
Label: moveDuck = 17
[f   = 15 ] 0df11       30    movi moveDuck, $15
[10  = 16 ] 04fce       31    juc $15
[11  = 17 ] 00030       45  moveDuck: xor $0, $0
Label: VAR_moveDuckReturn = 4
[12  = 18 ] 0d204       47    movi VAR_moveDuckReturn, $2 
[13  = 19 ] 04c42       48    stor $12, $2 
Label: VAR_VGA_moveToX = 0
[14  = 20 ] 0d200       50    movi VAR_VGA_moveToX, $2 
[15  = 21 ] 04d42       51    stor $13, $2 
Label: VAR_VGA_moveToY = 1
[16  = 22 ] 0d201       54    movi VAR_VGA_moveToY, $2 
[17  = 23 ] 04e42       55    stor $14, $2
[18  = 24 ] 0d700       62    movi 0, $7_moveCompleted 
[19  = 25 ] 00030       65    moveDuckLoop: xor $0, $0
Label: sleep = 70
[1a  = 26 ] 0df46       67      movi sleep, $15
Label: moveDuckSleepReturn = 30
[1b  = 27 ] 0dd1e       68      movi moveDuckSleepReturn, $13
[1c  = 28 ] 0de01       69      movi 1, $14_sleepArg
[1d  = 29 ] 04fce       70      juc $15
[1e  = 30 ] 00030       72      moveDuckSleepReturn: xor $0, $0
Label: VAR_VGA_moveToX = 0
[1f  = 31 ] 0d300       76      movi VAR_VGA_moveToX, $3
[20  = 32 ] 04303       77      load $3, $3
Label: VAR_VGA_currentX = 2
[21  = 33 ] 0d202       78      movi VAR_VGA_currentX, $2
[22  = 34 ] 04102       79      load $1, $2
Label: setFinishedX = 44
[23  = 35 ] 0df2c       83        movi setFinishedX, $15
[24  = 36 ] 001b3       84        cmp $3_moveToX, $1_currentX
[25  = 37 ] 04fc0       85        beq $15
[26  = 38 ] 06101       88        addui 1, $1 # add 1 to pos
[27  = 39 ] 00535       90        xor $5, $5
[28  = 40 ] 0f5c0       91        lui 0xc0, $5
[29  = 41 ] 04145       93        stor $1, $5_vga_addr # update VGA
[2a  = 42 ] 04142       94        stor $1, $2 # save currentX
Label: finishedElseX = 46
[2b  = 43 ] 0df2e       95        movi finishedElseX, $15
[2c  = 44 ] 0d102       98      setFinishedX: movi 0b10, $1 
[2d  = 45 ] 00721       99      or $1, $7  # moveComplete = 10  (x done,    y ?)
[2e  = 46 ] 00030       101     finishedElseX: xor $0, $0
Label: VAR_VGA_moveToY = 1
[2f  = 47 ] 0d301       104     movi VAR_VGA_moveToY, $3
[30  = 48 ] 04303       105     load $3, $3
Label: VAR_VGA_currentY = 3
[31  = 49 ] 0d203       106     movi VAR_VGA_currentY, $2
[32  = 50 ] 04102       107     load $1, $2
Label: setFinishedY = 62
[33  = 51 ] 0df3e       111       movi setFinishedY, $15
[34  = 52 ] 001b3       112       cmp $3_moveToY, $1_currentY
[35  = 53 ] 04fc0       113       beq $15
[36  = 54 ] 06101       116       addui 1, $1 # add 1 to pos
[37  = 55 ] 00535       118       xor $5, $5
[38  = 56 ] 0f5c0       119       lui 0xc0, $5
[39  = 57 ] 06501       120       addui 1, $5
[3a  = 58 ] 04145       122       stor $1, $5_vga_addr # update VGA
[3b  = 59 ] 04142       123       stor $1, $2 # save currentY
Label: finishedElseY = 64
[3c  = 60 ] 0df40       124       movi finishedElseY, $15
[3d  = 61 ] 04fce       125       juc $15
[3e  = 62 ] 0d101       128       setFinishedY: movi 0b01, $1 
[3f  = 63 ] 00721       129       or $1, $7  # moveComplete = 01  (x ?,    y done)
[40  = 64 ] 00030       131       finishedElseY: xor $0, $0
Label: VAR_moveDuckReturn = 4
[41  = 65 ] 0df04       134         movi VAR_moveDuckReturn, $15
[42  = 66 ] 0b703       135         cmpi 0b11, $7
[43  = 67 ] 04fc0       136         beq $15
Label: moveDuckLoop = 25
[44  = 68 ] 0df19       139         movi moveDuckLoop, $15
[45  = 69 ] 04fce       140         juc $15
[46  = 70 ] 00131       152 sleep: xor $1, $1
Label: sleepLoop = 71
[47  = 71 ] 0df47       153   sleepLoop: movi sleepLoop, $15
[48  = 72 ] 06101       154   addui 1, $1
[49  = 73 ] 00eb1       155   cmp $1, $14
[4a  = 74 ] 04fc1       156   bneq $15
[4b  = 75 ] 04dce       157   juc $13

